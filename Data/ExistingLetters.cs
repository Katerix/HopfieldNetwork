namespace HopfieldNetwork.Data
{
    public static class ExistingLetters
    {
        public static IEnumerable<Letter> Letters = new[] {
            new Letter
            {
                Character = 'Н',
                Representation = new int[,]{
                    { -1, 1, -1, -1, -1, -1, -1, -1, 1, -1 },
                    { -1, 1, -1, -1, -1, -1, -1, -1, 1, -1 },
                    { -1, 1, -1, -1, -1, -1, -1, -1, 1, -1 },
                    { -1, 1, -1, -1, -1, -1, -1, -1, 1, -1 },
                    { -1, 1,  1,  1,  1,  1,  1,  1, 1, -1 },
                    { -1, 1, -1, -1, -1, -1, -1, -1, 1, -1 },
                    { -1, 1, -1, -1, -1, -1, -1, -1, 1, -1 },
                    { -1, 1, -1, -1, -1, -1, -1, -1, 1, -1 },
                    { -1, 1, -1, -1, -1, -1, -1, -1, 1, -1 },
                    { -1, 1, -1, -1, -1, -1, -1, -1, 1, -1 }
                }
            },
            new Letter
            {
                Character = 'К',
                Representation = new int[,]{
                    { -1, 1, -1, -1, -1, -1, -1, -1,  1, -1 },
                    { -1, 1, -1, -1, -1, -1, -1, -1,  1, -1 },
                    { -1, 1, -1, -1, -1, -1, -1,  1, -1, -1 },
                    { -1, 1, -1, -1, -1, -1,  1, -1, -1, -1 },
                    { -1, 1, -1,  1,  1,  1, -1, -1, -1, -1 },
                    { -1, 1, -1, -1, -1,  1, -1, -1, -1, -1 },
                    { -1, 1, -1, -1, -1, -1,  1, -1, -1, -1 },
                    { -1, 1, -1, -1, -1, -1, -1,  1, -1, -1 },
                    { -1, 1, -1, -1, -1, -1, -1, -1,  1, -1 },
                    { -1, 1, -1, -1, -1, -1, -1, -1,  1, -1 }
                }
            },
            new Letter
            {
                Character = 'Л',
                Representation = new int[,]{
                    { -1, -1, -1, -1, -1, -1, -1,  1, 1, -1 },
                    { -1, -1, -1, -1, -1, -1,  1, -1, 1, -1 },
                    { -1, -1, -1, -1, -1,  1, -1, -1, 1, -1 },
                    { -1, -1, -1, -1,  1, -1, -1, -1, 1, -1 },
                    { -1, -1, -1,  1, -1, -1, -1, -1, 1, -1 },
                    { -1, -1, -1,  1, -1, -1, -1, -1, 1, -1 },
                    { -1, -1, -1,  1, -1, -1, -1, -1, 1, -1 },
                    { -1, -1, -1,  1, -1, -1, -1, -1, 1, -1 },
                    { -1, -1,  1, -1, -1, -1, -1, -1, 1, -1 },
                    { -1,  1, -1, -1, -1, -1, -1, -1, 1, -1 }
                }
            }
        };
    }
}